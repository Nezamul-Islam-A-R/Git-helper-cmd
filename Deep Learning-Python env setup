--install from requirements file
pip install -r requirements.txt

--verfy installation
pip list

--Separate installation
pip install opencv-python

--or, 
conda install -c conda-forge opencv

--if needed upgrade pip
pip install --upgrade pip


--for Open CV installation
# Upgrade pip and setuptools
pip install --upgrade pip setuptools

# (Optional) Uninstall previous OpenCV versions
pip uninstall opencv-python opencv-python-headless

# Install OpenCV headless version
pip install opencv-python-headless


--------------------- Deel Learning (New Environment Setup)

I have NVIDIA RTX A4000 GPUs with CUDA 12.2 installed. 

conda deactivate
conda remove -n tf_env --all  # Remove the existing environment
conda create -n tf_env python=3.8
conda activate tf_env
conda install -c conda-forge tensorflow=2.12 cudatoolkit=11.8 cudnn=8.8

# Remove current tensorflow installations
conda uninstall tensorflow tensorflow-gpu
pip uninstall tensorflow tensorflow-gpu

# Restart Kernel to see update

update----tf
# Install the appropriate version for CUDA 12.2
conda install -c conda-forge tensorflow=2.12 cudatoolkit=11.8 cudnn=8.8

# 2 Install tensorflow and keras
conda install tensorflow-gpu keras -c conda-forge

or---- use last working tf
pip install tensorflow==2.6.2
pip install tensorflow-addons==0.14.0
pip install tensorflow-datasets==4.5.2
pip install tensorflow-estimator==2.6.0
pip install tensorflow-hub==0.16.0
pip install tensorflow-metadata==1.2.0
pip install tensorflow-model-optimization==0.7.3
pip install tensorflow-text==2.6.0
# Install CUDA toolkit and cuDNN compatible with TF 2.6.2
conda install -c conda-forge cudatoolkit=11.2 cudnn=8.1

# Visualize model
pip install pydot graphviz
or 
conda install python-graphviz pydot

# Install PyTorch (if you want both frameworks)
conda install pytorch torchvision torchaudio cudatoolkit -c pytorch

# Install essential scientific computing packages
conda install numpy pandas scipy scikit-learn matplotlib seaborn

# 3 Install Jupyter and visualization tools
conda install -c conda-forge jupyter notebook
conda install jupyter notebook
conda install -c conda-forge matplotlib seaborn plotly

pip install scikit-image

# Install TensorBoard for neural network visualization
conda install tensorboard

# Install additional visualization tools
conda install -c conda-forge pyviz holoviz

# Install mayavi
conda install -c conda-forge mayavi
pip install mayavi

pip install panel hvplot holoviews bokeh datashader
pip install vtk

# First, update conda
conda update conda
# Then install vtk
conda install -c anaconda vtk

pip install ipyvolume
# Install jupyter widgets
conda install -c conda-forge ipywidgets

# Enable widgets in Jupyter
jupyter nbextension enable --py widgetsnbextension

—— careful
# First remove existing installations
pip uninstall ipyvolume -y
conda remove ipyvolume -y

# Clean jupyter lab/notebook extensions
jupyter labextension uninstall ipyvolume
jupyter nbextension uninstall --py --user ipyvolume

# Install fresh with all dependencies
conda install -c conda-forge ipyvolume jupyter ipywidgets pythreejs
jupyter nbextension enable --py widgetsnbextension
jupyter labextension install @jupyter-widgets/jupyterlab-manager
—-
#4 Install data processing utilities
conda install -c conda-forge pandas-profiling
conda install -c conda-forge opencv pillow

# Install progress bars and utilities
conda install tqdm ipywidgets

#5 Install Jupyter extensions
conda install -c conda-forge jupyter_contrib_nbextensions
jupyter contrib nbextension install --user

# Create a jupyter kernel for your environment
python -m ipykernel install --user --name deeplearn --display-name "Python (deeplearn)"

# Create requirements file
pip freeze > requirements.txt 
conda env export > environment.yml
